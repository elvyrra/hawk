/**
 * emv.js 3.0.0
 *
 * @author Elvyrra S.A.S
 * @license http://rem.mit-license.org/ MIT
 */
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

!function (e, t) {
    "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : e.EMV = t();
}(undefined, function () {
    function e() {
        var e = function e() {
            return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);
        };return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e();
    }function t(e) {
        var t = ["string", "number", "boolean", "undefined", "symbol"];return t.indexOf(typeof e === "undefined" ? "undefined" : _typeof(e)) !== -1 || null === e;
    }function i(e) {
        return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
    }
    var n = function (_Error) {
        _inherits(n, _Error);

        function n(e) {
            _classCallCheck(this, n);

            var t = "EMV Error : " + e;return _possibleConstructorReturn(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, t));
        }

        return n;
    }(Error);

    var r = function () {
        function r(e, t, i, n) {
            var _this2 = this;

            _classCallCheck(this, r);

            this.$computed = {}, this.$observed = new Set([]), this.$callers = {}, this.$watchers = {}, this.$root = t || this, this.$parent = i, this.$this = this, this.$directives = {}, this.$object = e, this.$additionalProperties = new Set([]), Object.keys(e).forEach(function (t) {
                _this2.$observe(t, e[t], n);
            }), "Object" !== e.constructor.name && Object.getOwnPropertyNames(e.constructor.prototype).forEach(function (t) {
                _this2.constructor.prototype[t] || (_this2.constructor.prototype[t] = e.constructor.prototype[t]);
            });
        }

        _createClass(r, [{
            key: "$observe",
            value: function $observe(e, i, n) {
                var _this3 = this;

                if (!this.$observed.has(e)) {
                    var _c = { get: function get() {
                            var t = _this3.$object[e];if (_this3.$root && "function" != typeof t) {
                                if (_this3.$root.$executingComputed && (_this3.$callers[e] || (_this3.$callers[e] = {}), !_this3.$callers[e][_this3.$root.$executingComputed.uid])) {
                                    (function () {
                                        var t = _this3.$root.$executingComputed,
                                            i = t.object;Object.keys(i.$computed).every(function (n) {
                                            return i.$computed[n] !== t || (_this3.$callers[e][t.uid] = { property: n, reader: t.reader, writer: t.writer, object: t.object }, !1);
                                        });
                                    })();
                                }_this3.$root.$executingDirective && (_this3.$directives[e] || (_this3.$directives[e] = new Set([])), _this3.$directives[e].add(_this3.$root.$executingDirective.uid));
                            }return t;
                        }, set: function set(i) {
                            var c = !1;if (e in _this3.$object || _this3.$root.$creatingContext || (c = !0), "function" == typeof i || i instanceof HTMLElement) return _this3.$object[e] = i, !0;var s = _this3.$object[e];if (t(i) || i instanceof r ? (_this3.$object[e] = i, i instanceof a && (i.$setRoot(_this3.$root || _this3), i.$parent = _this3)) : Array.isArray(i) ? _this3.$object[e] = new o(i, _this3.$root || _this3, _this3, e) : _this3.$object[e] = new r(i, _this3.$root || _this3, _this3, e), _this3.$computed[e] && _this3.$computed[e].writer) try {
                                _this3.$computed[e].writer(_this3, i, s);
                            } catch (e) {}return s !== i && (_this3.$notifySubscribers(e, i, s), c && _this3.$parent && _this3.$parent.$notifySubscribers(n, _this3.$parent)), !0;
                        }, enumerable: !0, configurable: !0 };Object.defineProperty(this, e, _c), this.$observed.add(e), this[e] = i;
                }
            }
        }, {
            key: "$setRoot",
            value: function $setRoot(e) {
                var _this4 = this;

                this.$root = e, Object.keys(this.$object).forEach(function (t) {
                    _this4.$object[t] instanceof r && _this4.$object[t].$setRoot(e);
                });
            }
        }, {
            key: "$notifySubscribers",
            value: function $notifySubscribers(e, t, i) {
                var _this5 = this;

                e && (void 0 === t && (t = this[e]), this.$callers[e] && Object.keys(this.$callers[e]).forEach(function (t) {
                    var i = _this5.$callers[e][t];i.object[i.property] = i.reader(i.object);
                }), this.$watchers[e] && Object.keys(this.$watchers[e]).forEach(function (n) {
                    _this5.$watchers[e][n].call(_this5, t, i);
                }), this.$directives[e] && this.$directives[e].forEach(function (t) {
                    var i = _this5.$root.$directives[t];return i ? void (i && i.handler.update && i.handler.update(i.element, i.parameters, i.model)) : void _this5.$directives[e].delete(t);
                }));
            }
        }, {
            key: "valueOf",
            value: function valueOf() {
                var _this6 = this;

                var e = {};return Object.keys(this).forEach(function (t) {
                    e[t] = _this6[t] ? _this6[t].valueOf() : _this6[t];
                }), e;
            }
        }, {
            key: "toString",
            value: function toString() {
                return JSON.stringify(this.valueOf());
            }
        }, {
            key: "$watch",
            value: function $watch(t, i) {
                var _this7 = this;

                if (Array.isArray(t)) return void t.forEach(function (e) {
                    _this7.$watch(e, i);
                });var n = void 0,
                    r = t.split("."),
                    o = r.pop();n = this.$this, r.forEach(function (e) {
                    n = n[e];
                }), n && (n.$watchers[o] || (n.$watchers[o] = {}), i.uid = e(), n.$watchers[o][i.uid] = i);
            }
        }, {
            key: "$unwatch",
            value: function $unwatch(e, t) {
                var i = void 0,
                    n = e.split("."),
                    r = n.pop();i = this.$this, n.forEach(function (e) {
                    i = i[e];
                }), i.$watchers[r] && (t ? delete i.$watchers[r][t.uid] : i.$watchers[r] = {});
            }
        }]);

        return r;
    }();

    var o = function (_r) {
        _inherits(o, _r);

        function o(e, t, i, n) {
            var _this8;

            _classCallCheck(this, o);

            (_this8 = _possibleConstructorReturn(this, (o.__proto__ || Object.getPrototypeOf(o)).call(this, e, t, i, n)), _this8), _this8.$observe("length", e.length, n), _this8.$watch("length", function () {
                _this8.forEach(function (e, t) {
                    _this8.$observe(t, e, n);
                });
            });return _this8;
        }

        _createClass(o, [{
            key: "valueOf",
            value: function valueOf() {
                return Array.from(this).map(function (e) {
                    return e ? e.valueOf() : e;
                });
            }
        }]);

        return o;
    }(r);

    Object.getOwnPropertyNames(Array.prototype).forEach(function (e) {
        o.prototype[e] || (o.prototype[e] = Array.prototype[e]);
    });
    var c = function c(t, i) {
        _classCallCheck(this, c);

        var n = this;this.uid = e(), this.object = i, "function" == typeof t && (t = { read: t }), t.write && (this.writer = function (e, i, n) {
            t.write.call(e, i, n);
        }), t.read && (this.reader = function (e) {
            var r = i.$root.$executingComputed;i.$root.$executingComputed = n;var o = void 0;try {
                o = t.read.call(e);
            } catch (e) {
                o = void 0;
            }return i.$root.$executingComputed = r, o;
        });
    };

    var s = function () {
        function s(e, t) {
            var _this9 = this;

            _classCallCheck(this, s);

            this.name = e;var i = this;var n = function n(_n) {
                t[_n] && (_this9[_n] = function (r, o, c) {
                    var s = c.$root.$executingDirective;c.$root.$executingDirective = { element: r, parameters: o, model: c, handler: i, uid: _this9.getUid(r), name: e };var a = t[_n](r, o, c);return c.$executingDirective = s, a;
                });
            };n("init"), n("bind"), n("update");
        }

        _createClass(s, [{
            key: "getUid",
            value: function getUid(t) {
                return t.$uid || (t.$uid = e()), t.$uid + "-" + this.name;
            }
        }]);

        return s;
    }();

    var a = function (_r2) {
        _inherits(a, _r2);

        function a(e, t) {
            var _this10;

            _classCallCheck(this, a);

            var i = e || {};(_this10 = _possibleConstructorReturn(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, i.data || i, t)), _this10), _this10.$templates = {}, _this10.$executingComputed = null, _this10.$executingDirective = null, _this10.$creatingContext = !1, _this10.$directives = {}, i.computed && Object.keys(i.computed).forEach(function (e) {
                _this10.$computed[e] = new c(i.computed[e], _this10), _this10.$observe(e);
            }), Object.keys(_this10.$computed).forEach(function (e) {
                _this10.$computed[e].reader ? _this10[e] = _this10.$computed[e].reader(_this10) : _this10[e] = void 0;
            });return _this10;
        }

        _createClass(a, [{
            key: "$apply",
            value: function $apply(e) {
                if (this.$rootElement) throw new n("an emv instance cannot be instanciated on multiple DOM elements.");this.$rootElement = e || document.body, this.$createContext(this.$rootElement, this), this.$parse(this.$rootElement), this.$render(this.$rootElement);
            }
        }, {
            key: "$clean",
            value: function $clean(e, t) {
                var _this11 = this;

                var i = e || this.$rootElement;i && (i.$directives && Object.keys(i.$directives).forEach(function (e) {
                    if (!t || t.indexOf(e) === -1) {
                        var _t = i.$directives[e];delete _this11.$directives[_t], delete i.$directives[e];
                    }
                }), i.children && Array.from(i.children).forEach(function (e) {
                    _this11.$clean(e);
                }), i === this.$rootElement && delete this.$rootElement);
            }
        }, {
            key: "$registerTemplate",
            value: function $registerTemplate(e, t) {
                var i = t.replace(/<!\-\-(.*?)\-\->/g, "");this.$templates[e] = i;
            }
        }, {
            key: "$parseDirectiveTransformation",
            value: function $parseDirectiveTransformation(e) {
                var t = /^(\w+)(\((.+)\))?$/.exec(e);if (t) {
                    var _e = t[1],
                        _i = "{" + (t[3] || "") + "}";return { name: _e, parameters: _i };
                }throw new Error();
            }
        }, {
            key: "$parseHandlebardDirective",
            value: function $parseHandlebardDirective(e, t) {
                var _this12 = this;

                var r = new RegExp(i(a.config.delimiters[0]) + "(.+?)" + i(a.config.delimiters[1]), "g"),
                    o = t.match(r);if (o) {
                    this.$getContext(e.parentNode);var _i2 = t.replace(r, function (e, i) {
                        var r = i.split("::").map(function (e) {
                            return e.trim();
                        });var o = r[0];return r.length > 1 && r.slice(1).forEach(function (e) {
                            try {
                                var _i3 = _this12.$parseDirectiveTransformation(e);o = "EMV.transformations." + _i3.name + "(" + o + ", " + _i3.parameters + ")";
                            } catch (e) {
                                throw new n("Error while parsing directive transformation : " + t);
                            }
                        }), "' + " + o + " + '";
                    });return _i2;
                }return null;
            }
        }, {
            key: "$parse",
            value: function $parse(e, t) {
                var _this13 = this;

                if (!e.$directives) {
                    if ("template" === e.nodeName.toLowerCase()) this.$registerTemplate(e.id, e.innerHTML), e.parentNode.removeChild(e);else if ("#text" === e.nodeName.toLowerCase()) {
                        var _t2 = this.$parseHandlebardDirective(e, e.textContent);null !== _t2 && this.$setElementDirective(e, "text", "'" + _t2 + "'");
                    } else e.attributes && (Object.keys(a.directives).forEach(function (i) {
                        if ((!t || t.indexOf(i) === -1) && e.getAttribute) {
                            var _t3 = a.config.attributePrefix + "-" + i;if (e.hasAttribute(_t3)) {
                                var _n2 = e.getAttribute(_t3),
                                    _r3 = a.directives[i];_this13.$getContext(e), _this13.$setElementDirective(e, i, _n2), _r3.init && _r3.init.call(_this13, e, _n2, _this13);
                            }
                        }
                    }), Array.from(e.attributes).forEach(function (t) {
                        var i = t.name,
                            n = t.textContent,
                            r = _this13.$parseHandlebardDirective(e, n);if (null !== r) {
                            var _t4 = _this13.$directives[e.$directives && e.$directives.attr],
                                _n3 = _t4 && _t4.parameters || "";_n3 && (_n3 = _n3.substring(1, _n3.length - 1) + ","), _n3 += "'" + i + "' : '" + r + "'", _n3 = "{" + _n3 + "}", _this13.$setElementDirective(e, "attr", _n3);
                        }
                    }));e.childNodes && Array.from(e.childNodes).forEach(function (e) {
                        _this13.$parse(e);
                    });
                }
            }
        }, {
            key: "$setElementDirective",
            value: function $setElementDirective(t, i, n) {
                t.$directives || (t.$directives = {}), t.$uid || (t.$uid = e());var r = a.directives[i],
                    o = r.getUid(t);this.$directives[o] = { name: i, handler: r, parameters: n, model: this, element: t }, t.$directives[i] = o;
            }
        }, {
            key: "$render",
            value: function $render(e, t) {
                var _this14 = this;

                e.$stopRenderingPropagation = !1, e.$directives && Object.keys(e.$directives).forEach(function (i) {
                    if (!(t && t.indexOf(i) !== -1 || e.$stopRenderingPropagation)) {
                        var _t5 = e.$directives[i],
                            _n4 = this.$directives[_t5];if (!_n4) return;var _r4 = _n4.handler,
                            _o = _n4.parameters;_r4.bind && _r4.bind.call(this, e, _o, this), _r4.update && _r4.update.call(this, e, _o, this);
                    }
                }.bind(this)), document.documentElement.contains(e) && !e.$stopRenderingPropagation && e.childNodes && Array.from(e.childNodes).forEach(function (e) {
                    _this14.$render(e);
                });
            }
        }, {
            key: "$stopRenderingPropagation",
            value: function $stopRenderingPropagation(e) {
                e.$stopRenderingPropagation = !0;
            }
        }, {
            key: "$createContext",
            value: function $createContext(e, t, i) {
                this.$creatingContext = !0;var o = t;t instanceof r ? (o.$this = t, o.$parent = t.$parent, o.$root = this) : o = { $this: t, $parent: t.$parent, $root: this, $additionalProperties: new Set([]) };var c = this.$getAdditionalContextProperties(e);c.forEach(function (t) {
                    if (["$this", "$parent", "$root"].indexOf(t) !== -1) throw new n("You cannot apply the key '" + t + "' as additionnal context property");o.$additionalProperties.add(t), o[t] = (e.parentNode || e.$parent).$context[t];
                }), e.$additionalContextProperties = new Set(c), i && Object.keys(i).forEach(function (t) {
                    o.$additionalProperties.add(t), o[t] = i[t], e.$additionalContextProperties.add(t);
                }), e.$context = o, this.$creatingContext = !1;
            }
        }, {
            key: "$removeContext",
            value: function $removeContext(e) {
                var _this15 = this;

                delete e.$context, e.children && Array.from(e.children).forEach(function (e) {
                    _this15.$removeContext(e);
                });
            }
        }, {
            key: "$getContext",
            value: function $getContext(e) {
                if (!e) return {};if (e.$context) return e.$context;var t = this.$getContext(e.parentNode);return e.$context = t, t;
            }
        }, {
            key: "$getAdditionalContextProperties",
            value: function $getAdditionalContextProperties(e) {
                if (e.$additionalContextProperties) return e.$additionalContextProperties;if (e === this.$rootElement) return new Set([]);var t = e.parentNode || e.$parent;if (t) {
                    var _i4 = this.$getAdditionalContextProperties(t);return e.$additionalContextProperties = _i4, _i4;
                }return new Set([]);
            }
        }, {
            key: "$parseDirectiveGetterParameters",
            value: function $parseDirectiveGetterParameters(e) {
                return new Function("$context", "var $$result;with($context) {$$result=(" + e + ");};return $$result;");
            }
        }, {
            key: "$getDirectiveValue",
            value: function $getDirectiveValue(e, t, i) {
                var _this16 = this;

                var n = e.replace(/\n\s*/g, ""),
                    r = this.$parseDirectiveGetterParameters(n),
                    o = i || this.$getContext(t);try {
                    var _e2 = r(o);if ("object" == (typeof _e2 === "undefined" ? "undefined" : _typeof(_e2)) && _e2.$transform && "$data" in _e2) {
                        var _ret2 = function () {
                            Array.isArray(_e2.$transform) || (_e2.$transform = [_e2.$transform]);var t = _e2.$data;return {
                                v: (_e2.$transform.forEach(function (e) {
                                    var i = _this16.$parseDirectiveTransformation(e),
                                        n = new Function("", "return " + i.parameters + ";");t = a.transformations[i.name](t, n());
                                }), t)
                            };
                        }();

                        if ((typeof _ret2 === "undefined" ? "undefined" : _typeof(_ret2)) === "object") return _ret2.v;
                    }return _e2;
                } catch (e) {
                    return;
                }
            }
        }, {
            key: "$parseDirectiveSetterParameters",
            value: function $parseDirectiveSetterParameters(e) {
                return new Function("$context", "$value", "\n                with($context) {\n                    " + e + " = $value;\n                }\n            ");
            }
        }, {
            key: "$setDirectiveValue",
            value: function $setDirectiveValue(e, t, i) {
                var r = this.$parseDirectiveSetterParameters(e);try {
                    r(this.$getContext(t), i);
                } catch (e) {
                    throw new n(e.message);
                }
            }
        }, {
            key: "$insertRemoveElement",
            value: function $insertRemoveElement(e, t, i, n) {
                var r = i || e;if (t) {
                    var _t6 = !r.$parent.contains(e) || n;if (_t6) {
                        var _t7 = null;e.$before && e.$before.every(function (e) {
                            return !r.$parent.contains(e) || (_t7 = e, !1);
                        }), _t7 ? _t7.nextElementSibling ? r.$parent.insertBefore(e, _t7.nextElementSibling) : r.$parent.appendChild(e) : r.$parent.insertBefore(e, r.$parent.firstChild);
                    }
                } else this.$stopRenderingPropagation(e), r.$parent.contains(e) && r.$parent.removeChild(e);
            }
        }], [{
            key: "directive",
            value: function directive(e, t) {
                this.directives[e] = new s(e, t);
            }
        }, {
            key: "transform",
            value: function transform(e, t) {
                this.transformations[e] = t;
            }
        }]);

        return a;
    }(r);

    a.directives = {}, a.directive("show", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n ? e.style.display = "" : e.style.display = "none";
        } }), a.directive("class", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);e.originalClassList || (e.originalClassList = [], Array.from(e.classList).forEach(function (t) {
                e.originalClassList.push(t);
            })), Array.from(e.classList).forEach(function (t) {
                e.originalClassList.indexOf(t) === -1 && e.classList.remove(t);
            }), n && ("string" == typeof n && (n = _defineProperty({}, n, !0)), "object" == (typeof n === "undefined" ? "undefined" : _typeof(n)) && Object.keys(n).forEach(function (t) {
                var i = t.split(" "),
                    r = e.classList;i.forEach(function (e) {
                    n[t] ? r.add(e) : r.remove(e);
                });
            }));
        } }), a.directive("style", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n && "object" == (typeof n === "undefined" ? "undefined" : _typeof(n)) && Object.keys(n).forEach(function (t) {
                var i = n[t];i ? e.style[t] = i : e.style[t] = "";
            });
        } }), a.directive("attr", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n && "object" == (typeof n === "undefined" ? "undefined" : _typeof(n)) && Object.keys(n).forEach(function (t) {
                var i = n[t];i ? e.setAttribute(t, i) : e.removeAttribute(t);
            });
        } }), a.directive("disabled", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n ? e.setAttribute("disabled", !0) : e.removeAttribute("disabled");
        } }), a.directive("value", { bind: function bind(e, t, i) {
            e["true" === e.contentEditable ? "onblur" : "onchange"] = function () {
                var n = void 0,
                    r = e.nodeName.toLowerCase(),
                    o = e.type;switch (r) {case "input":case "select":
                        switch (o) {case "checkbox":
                                n = Boolean(e.checked);break;case "radio":
                                n = document.querySelector("input[name=\"" + e.name + "\"]:checked").value;break;default:
                                n = e.value;}break;case "textarea":
                        n = e.value;break;default:
                        if (e.contentEditable) {
                            n = e.innerHTML;break;
                        }return;}i.$setDirectiveValue(t, e, n);
            };
        }, update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);void 0 === n && (n = "");var r = e.nodeName.toLowerCase(),
                o = e.type;switch (r) {case "input":case "select":
                    switch (o) {case "checkbox":
                            e.checked = Boolean(n);break;case "radio":
                            {
                                var _t8 = document.querySelector("input[name=\"" + e.name + "\"][value=\"" + n + "\"]");_t8 && (_t8.checked = !0);break;
                            }case "file":
                            return;default:
                            e.value = n;}break;case "textarea":
                    e.value = n;break;default:
                    e.contentEditable ? e.innerHTML = n : e.value = n;}
        } }), a.directive("input", { bind: function bind(e, t, i) {
            e.addEventListener("input", function () {
                i.$setDirectiveValue(t, e, e.value);
            });
        }, update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);e.value = n || "";
        } }), a.directive("focus", { bind: function bind(e, t, i) {
            e.addEventListener("focus", function () {
                i.$setDirectiveValue(t, e, !0);
            }), e.addEventListener("blur", function () {
                i.$setDirectiveValue(t, e, !1);
            });
        }, update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n && e !== document.activeElement ? e.focus() : n || e !== document.activeElement || e.blur();
        } }), a.directive("options", { update: function update(e, t, i) {
            if ("select" !== e.nodeName.toLowerCase()) throw new n("options directive can be applied only on select tags");var r = i.$getDirectiveValue(t, e),
                o = r.valueOf();if (r && (!("$data" in r) || r.$data)) {
                (function () {
                    if (r.$data) {
                        o = {};var _e3 = r.$data.valueOf();Object.keys(_e3).forEach(function (e) {
                            var t = r.$data[e],
                                i = r.$value ? t[r.$value] : e,
                                n = r.$label ? t[r.$label] : t;o[i] = n;
                        });
                    }var t = e.value || r.$selected;e.innerHTML = "";var i = function i(_i5, n) {
                        var r = document.createElement("option");r.value = _i5, r.innerText = n, _i5.toString() === t && (r.selected = !0), e.appendChild(r);
                    };Object.keys(o).forEach(function (e) {
                        var t = o[e];i(e, t);
                    });
                })();
            }
        } }), a.directive("text", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);"#text" === e.nodeName ? e.nodeValue = n : e.innerText = n;
        } }), a.directive("html", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);e.innerHTML = n;var r = e.querySelectorAll("script");Array.from(r).forEach(function (e) {
                if (e.innerText) {
                    var _t9 = new Function(e.innerText);_t9();
                } else {
                    var _t10 = document.createElement("script");_t10.src = e.src, e.parentNode.replaceChild(_t10, e);
                }
            });
        } }), a.directive("click", { bind: function bind(e, t, i) {
            var n = i.$parseDirectiveGetterParameters(t);e.onclick = function (t) {
                var r = i.$getContext(e),
                    o = n(r, t);"function" == typeof o && o.call(r.$this, r, t);
            };
        } }), a.directive("on", { bind: function bind(e, t, i) {
            var n = i.$parseDirectiveGetterParameters(t),
                r = n(i.$getContext(e));"object" == (typeof r === "undefined" ? "undefined" : _typeof(r)) && Object.keys(r).forEach(function (t) {
                var n = r[t],
                    o = "on" + t;e[o] = function (t) {
                    n(i.$getContext(e), t);
                };
            });
        } }), a.directive("submit", { bind: function bind(e, t, i) {
            if ("form" !== e.nodeName.toLowerCase()) throw new n("submit directive can be applied only on form tags");var r = i.$parseDirectiveGetterParameters(t);e.addEventListener("submit", function (t) {
                var n = r(i.$getContext(e));"function" == typeof n && n(i.$getContext(e), t);
            });
        } });var u = function u(t, i) {
        t.$before = [], t.previousElementSibling && (t.$before = [t.previousElementSibling], t.previousElementSibling.$before && (t.$before = t.$before.concat(t.previousElementSibling.$before))), t.$parent = t.parentNode;var n = t.innerHTML,
            r = e();t.$templateName = r, i.$registerTemplate(r, n);
    };a.directive("each", { init: function init(e, t, i) {
            u(e, i), e.$clones = [];var n = document.createElement("meta");n.$initialElement = e, n.$uid = e.$uid, n.$context = e.$context, n.setAttribute("name", "e-each-" + e.$uid), i.$setElementDirective(n, "each", t), e.parentNode.replaceChild(n, e);
        }, update: function update(e, t, i) {
            var n = e.$initialElement,
                r = i.$getDirectiveValue(t, n);if (r) {
                (function () {
                    var t = r && Array.from("$data" in r ? r.$data || [] : r) || [];t = t.filter(function (e) {
                        return void 0 !== e && null !== e;
                    }), r.$filter && (t = t.filter(r.$filter)), r.$sort && ("function" == typeof r.$sort ? t.sort(r.$sort) : t.sort(function (e, t) {
                        return e[r.$sort] < t[r.$sort] ? -1 : 1;
                    })), r.$order && r.$order < 0 && t.reverse();var o = r.$offset || 0,
                        c = o + (r.$limit || t.length);t = t.slice(o, c);var s = n.$clones.slice();s.forEach(function (e) {
                        t.indexOf(e.$$item) !== -1 && e.$context || (i.$clean(e), e.parentNode && e.parentNode.contains(e) && e.parentNode.removeChild(e));
                    }), n.$clones = [], t.forEach(function (t, o) {
                        var c = s.findIndex(function (e) {
                            return e.$$item === t;
                        }),
                            a = n.$clones.slice().reverse().concat(e).concat(n.$before);if (c !== -1) {
                            var _e4 = s[c];if (n.$clones.push(_e4), c === o) return;return _e4.$before = a, _e4.$context.$index = o, void i.$insertRemoveElement(_e4, !0, n, !0);
                        }var u = { $index: o };r.$item && (u[r.$item] = t);var d = n.cloneNode(!0);d.$$item = t, d.$parent = n.$parent, i.$createContext(d, t, u), d.$before = a, Object.keys(n.$directives).forEach(function (e) {
                            if ("each" !== e) {
                                var _t11 = n.$directives[e];i.$setElementDirective(d, e, i.$directives[_t11].parameters);
                            }
                        }), i.$insertRemoveElement(d, !0, n), d.innerHTML = i.$templates[n.$templateName], d.childNodes && Array.from(d.childNodes).forEach(function (e) {
                            i.$parse(e);
                        }), i.$render(d, ["each"]), n.$clones.push(d);
                    });
                })();
            }
        } }), a.directive("if", { init: function init(e, t, i) {
            u(e, i);
        }, update: function update(e, t, i) {
            var n = Boolean(i.$getDirectiveValue(t, e));i.$insertRemoveElement(e, n), n && i.$render(e, ["if"]);
        } }), a.directive("unless", { init: function init(e, t, i) {
            u(e, i);
        }, update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);i.$insertRemoveElement(e, !n), n || i.$render(e, ["unless"]);
        } }), a.directive("with", { init: function init(e, t, i) {
            u(e, i);
        }, update: function update(e, t, i) {
            var n = void 0,
                r = {};if (e === i.$rootElement) n = i.$getDirectiveValue(t, e, i);else {
                if (!e.$parent) return void i.$stopRenderingPropagation(e);i.$removeContext(e), n = i.$getDirectiveValue(t, e.$parent);
            }n && "$data" in n && ("$as" in n && (r[n.$as] = n.$data), n = n.$data), n ? (i.$removeContext(e), i.$createContext(e, n, r), i.$insertRemoveElement(e, !0), e.childNodes && Array.from(e.childNodes).forEach(function (e) {
                i.$clean(e);
            }), e.innerHTML = i.$templates[e.$templateName], e.childNodes && Array.from(e.childNodes).forEach(function (e) {
                i.$parse(e);
            }), i.$render(e, ["with"])) : i.$insertRemoveElement(e, !1);
        } }), a.directive("template", { update: function update(e, t, i) {
            if (document.documentElement.contains(e)) {
                var _n6 = i.$getDirectiveValue(t, e),
                    _r5 = i.$templates[_n6] || "";e.innerHTML = _r5;var _o2 = e.querySelectorAll("script");Array.from(_o2).forEach(function (e) {
                    if (e.innerText) {
                        var _t12 = new Function(e.innerText);_t12();
                    } else {
                        var _t13 = document.createElement("script");_t13.src = e.src, e.parentNode.replaceChild(_t13, e);
                    }
                }), e.childNodes && (Array.from(e.childNodes).forEach(function (e) {
                    i.$parse(e);
                }), Array.from(e.childNodes).forEach(function (e) {
                    i.$render(e);
                }));
            }
        } }), a.transformations = {}, a.transform("upper", function (e) {
        return "string" == typeof e && e.toUpperCase() || e;
    }), a.transform("lower", function (e) {
        return "string" == typeof e && e.toLowerCase() || e;
    }), a.transform("ucfirst", function (e) {
        return "string" != typeof e ? e : e.substr(0, 1).toUpperCase() + e.substr(1);
    }), a.transform("ucwords", function (e) {
        return "string" != typeof e ? e : e.replace(/(^|\s)(.)/g, function (e, t, i) {
            return t + i.toUpperCase();
        });
    }), a.transform("json", function (e) {
        return JSON.stringify(e.valueOf());
    }), a.transform("number", function (e, t) {
        if ("number" != typeof e) return e;var i = e;return void 0 !== t.decimals && (i = i.toFixed(t.decimals)), t.thousandSep && (i = i.replace(/\B(?=(?:\d{3})+(?!\d))/g, t.thousandSep)), t.decimalSep && (i = i.replace(".", t.decimalSep)), i;
    }), a.config = { attributePrefix: "e", delimiters: ["${", "}"] }, Object.defineProperty(a, "version", { value: "3.0.0", writable: !1 }), a.utils = { uid: function uid() {
            return e();
        } };var d = Array.isArray;Array.isArray = function (e) {
        return e instanceof o || d(e);
    };var f = Object.keys;return Object.keys = function (e) {
        if (e instanceof o) {
            var _ret5 = function () {
                var t = [];return {
                    v: (e.forEach(function (e, i) {
                        t.push(i.toString());
                    }), t)
                };
            }();

            if ((typeof _ret5 === "undefined" ? "undefined" : _typeof(_ret5)) === "object") return _ret5.v;
        }if (e instanceof r) {
            var _t14 = f(e);return _t14.filter(function (t) {
                return "$" !== t.substr(0, 1) && !(e.$additionalProperties && e.$additionalProperties.has(t));
            });
        }return f(e);
    }, a;
});