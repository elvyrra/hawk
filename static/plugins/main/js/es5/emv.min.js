/**
 * emv.js 2.0.0-2
 *
 * @author Elvyrra S.A.S
 * @license http://rem.mit-license.org/ MIT
 */
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

!function (e, t) {
    "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : e.EMV = t();
}(undefined, function () {
    function e() {
        var e = function e() {
            return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);
        };return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e();
    }function t(e) {
        var t = ["string", "number", "boolean", "undefined", "symbol"];return -1 !== t.indexOf(typeof e === "undefined" ? "undefined" : _typeof(e)) || null === e;
    }function i(e) {
        return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
    }
    var n = function (_Error) {
        _inherits(n, _Error);

        function n(e) {
            _classCallCheck(this, n);

            var t = "EMV Error : " + e;return _possibleConstructorReturn(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, t));
        }

        return n;
    }(Error);

    var r = function () {
        function r(e, t, i, n) {
            var _this2 = this;

            _classCallCheck(this, r);

            this.$computed = {};this.$observed = new Set([]);this.$callers = {};this.$watchers = {};this.$root = t || this;this.$parent = i;this.$this = this;this.$directives = {};this.$object = e;this.$additionalProperties = new Set([]);Object.keys(e).forEach(function (t) {
                _this2.$observe(t, e[t], n);
            });if (e.constructor.name !== "Object") {
                Object.getOwnPropertyNames(e.constructor.prototype).forEach(function (t) {
                    if (!_this2.constructor.prototype[t]) {
                        _this2.constructor.prototype[t] = e.constructor.prototype[t];
                    }
                });
            }
        }

        _createClass(r, [{
            key: "$observe",
            value: function $observe(e, i, n) {
                if (this.$observed.has(e)) {
                    return;
                }var c = { get: function () {
                        var _this3 = this;

                        var t = this.$object[e];if (this.$root && typeof t !== "function") {
                            if (this.$root.$executingComputed) {
                                if (!this.$callers[e]) {
                                    this.$callers[e] = {};
                                }if (!this.$callers[e][this.$root.$executingComputed.uid]) {
                                    (function () {
                                        var i = _this3.$root.$executingComputed;var n = i.object;Object.keys(n.$computed).every(function (t) {
                                            if (n.$computed[t] === i) {
                                                this.$callers[e][i.uid] = { property: t, reader: i.reader, writer: i.writer, object: i.object };return false;
                                            }return true;
                                        }.bind(_this3));
                                    })();
                                }
                            }if (this.$root.$executingDirective) {
                                if (!this.$directives[e]) {
                                    this.$directives[e] = new Set([]);
                                }this.$directives[e].add(this.$root.$executingDirective.uid);
                            }
                        }return t;
                    }.bind(this), set: function (i) {
                        var c = false;if (!(e in this.$object) && !this.$root.$creatingContext) {
                            c = true;
                        }if (typeof i === "function" || i instanceof HTMLElement) {
                            this.$object[e] = i;return true;
                        }var s = this.$object[e];if (!t(i) && !(i instanceof r)) {
                            if (Array.isArray(i)) {
                                this.$object[e] = new o(i, this.$root || this, this, e);
                            } else {
                                this.$object[e] = new r(i, this.$root || this, this, e);
                            }
                        } else {
                            this.$object[e] = i;if (i instanceof a) {
                                i.$setRoot(this.$root || this);i.$parent = this;
                            }
                        }if (this.$computed[e] && this.$computed[e].writer) {
                            try {
                                this.$computed[e].writer(this, i, s);
                            } catch (u) {}
                        }if (s !== i) {
                            this.$notifySubscribers(e, i, s);if (c && this.$parent) {
                                this.$parent.$notifySubscribers(n, this.$parent);
                            }
                        }return true;
                    }.bind(this), enumerable: true, configurable: true };Object.defineProperty(this, e, c);this.$observed.add(e);this[e] = i;
            }
        }, {
            key: "$setRoot",
            value: function $setRoot(e) {
                var _this4 = this;

                this.$root = e;Object.keys(this.$object).forEach(function (t) {
                    if (_this4.$object[t] instanceof r) {
                        _this4.$object[t].$setRoot(e);
                    }
                });
            }
        }, {
            key: "$notifySubscribers",
            value: function $notifySubscribers(e, t, i) {
                if (!e) {
                    return;
                }if (t === undefined) {
                    t = this[e];
                }if (this.$callers[e]) {
                    Object.keys(this.$callers[e]).forEach(function (t) {
                        var i = this.$callers[e][t];i.object[i.property] = i.reader(i.object);
                    }.bind(this));
                }if (this.$watchers[e]) {
                    Object.keys(this.$watchers[e]).forEach(function (n) {
                        this.$watchers[e][n].call(this, t, i);
                    }.bind(this));
                }if (this.$directives[e]) {
                    this.$directives[e].forEach(function (t) {
                        var i = this.$root.$directives[t];if (!i) {
                            this.$directives[e].delete(t);return;
                        }if (i && i.handler.update) {
                            i.handler.update(i.element, i.parameters, i.model);
                        }
                    }.bind(this));
                }
            }
        }, {
            key: "valueOf",
            value: function valueOf() {
                var _this5 = this;

                var e = {};Object.keys(this).forEach(function (t) {
                    e[t] = _this5[t] ? _this5[t].valueOf() : _this5[t];
                });return e;
            }
        }, {
            key: "toString",
            value: function toString() {
                return JSON.stringify(this.valueOf());
            }
        }, {
            key: "$watch",
            value: function $watch(t, i) {
                var _this6 = this;

                if (Array.isArray(t)) {
                    t.forEach(function (e) {
                        _this6.$watch(e, i);
                    });return;
                }var n = t.split("."),
                    r = void 0,
                    o = n.pop();r = this.$this;n.forEach(function (e) {
                    r = r[e];
                });if (!r) {
                    return;
                }if (!r.$watchers[o]) {
                    r.$watchers[o] = {};
                }i.uid = e();r.$watchers[o][i.uid] = i;
            }
        }, {
            key: "$unwatch",
            value: function $unwatch(e, t) {
                var i = e.split("."),
                    n = void 0,
                    r = i.pop();n = this.$this;i.forEach(function (e) {
                    n = n[e];
                });if (n.$watchers[r]) {
                    if (t) {
                        delete n.$watchers[r][t.uid];
                    } else {
                        n.$watchers[r] = {};
                    }
                }
            }
        }]);

        return r;
    }();

    var o = function (_r) {
        _inherits(o, _r);

        function o(e, t, i, n) {
            _classCallCheck(this, o);

            var _this7 = _possibleConstructorReturn(this, (o.__proto__ || Object.getPrototypeOf(o)).call(this, e, t, i, n));

            _this7.$observe("length", e.length, n);_this7.$watch("length", function () {
                _this7.forEach(function (e, t) {
                    _this7.$observe(t, e, n);
                });
            });return _this7;
        }

        _createClass(o, [{
            key: "valueOf",
            value: function valueOf() {
                return Array.from(this).map(function (e) {
                    return e ? e.valueOf() : e;
                });
            }
        }]);

        return o;
    }(r);

    Object.getOwnPropertyNames(Array.prototype).forEach(function (e) {
        o.prototype[e] || (o.prototype[e] = Array.prototype[e]);
    });
    var c = function c(t, i) {
        _classCallCheck(this, c);

        var n = this;this.uid = e();this.object = i;if (typeof t === "function") {
            t = { read: t };
        }if (t.write) {
            this.writer = function (e, i, n) {
                t.write.call(e, i, n);
            };
        }if (t.read) {
            this.reader = function (e) {
                var r = i.$root.$executingComputed;i.$root.$executingComputed = n;var o = void 0;try {
                    o = t.read.call(e);
                } catch (c) {
                    o = undefined;
                }i.$root.$executingComputed = r;return o;
            };
        }
    };

    var s = function () {
        function s(e, t) {
            _classCallCheck(this, s);

            this.name = e;var i = this;var n = function (n) {
                if (t[n]) {
                    this[n] = function (r, o, c) {
                        var s = c.$root.$executingDirective;c.$root.$executingDirective = { element: r, parameters: o, model: c, handler: i, uid: this.getUid(r), name: e };var a = t[n](r, o, c);c.$executingDirective = s;return a;
                    }.bind(this);
                }
            }.bind(this);n("init");n("bind");n("update");
        }

        _createClass(s, [{
            key: "getUid",
            value: function getUid(t) {
                if (!t.$uid) {
                    t.$uid = e();
                }return t.$uid + "-" + this.name;
            }
        }]);

        return s;
    }();

    var a = function (_r2) {
        _inherits(a, _r2);

        function a(e, t) {
            _classCallCheck(this, a);

            var i = e || {};
            var _this8 = _possibleConstructorReturn(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, i.data || i, t));

            _this8.$templates = {};_this8.$executingComputed = null;_this8.$executingDirective = null;_this8.$creatingContext = false;_this8.$directives = {};if (i.computed) {
                Object.keys(i.computed).forEach(function (e) {
                    this.$computed[e] = new c(i.computed[e], this);this.$observe(e);
                }.bind(_this8));
            }Object.keys(_this8.$computed).forEach(function (e) {
                if (_this8.$computed[e].reader) {
                    _this8[e] = _this8.$computed[e].reader(_this8);
                } else {
                    _this8[e] = undefined;
                }
            });return _this8;
        }

        _createClass(a, [{
            key: "$apply",
            value: function $apply(e) {
                if (this.$rootElement) {
                    throw new n("an emv instance cannot be instanciated on multiple DOM elements.");
                }this.$rootElement = e || document.body;this.$createContext(this.$rootElement, this);this.$parse(this.$rootElement);this.$render(this.$rootElement);
            }
        }, {
            key: "$clean",
            value: function $clean(e, t) {
                var _this9 = this;

                var i = e || this.$rootElement;if (!i) {
                    return;
                }if (i.$directives) {
                    Object.keys(i.$directives).forEach(function (e) {
                        if (!t || t.indexOf(e) === -1) {
                            var _n = i.$directives[e];delete _this9.$directives[_n];delete i.$directives[e];
                        }
                    });
                }if (i.children) {
                    Array.from(i.children).forEach(function (e) {
                        _this9.$clean(e);
                    });
                }if (i === this.$rootElement) {
                    delete this.$rootElement;
                }
            }
        }, {
            key: "$registerTemplate",
            value: function $registerTemplate(e, t) {
                var i = t.replace(/<!\-\-(.*?)\-\->/g, "");this.$templates[e] = i;
            }
        }, {
            key: "$parse",
            value: function $parse(e, t) {
                var _this10 = this;

                var n = new RegExp(i(a.config.delimiters[0]) + "(.+?)" + i(a.config.delimiters[1]), "g");if (e.$directives) {
                    return;
                }if (e.nodeName.toLowerCase() === "template") {
                    this.$registerTemplate(e.id, e.innerHTML);e.parentNode.removeChild(e);
                } else if (e.nodeName.toLowerCase() === "#text") {
                    var _r3 = e.textContent;var _o = _r3.match(n);if (_o) {
                        this.$getContext(e.parentNode);var _c = _r3.replace(n, "' + $1 + '");this.$setElementDirective(e, "text", "'" + _c + "'");
                    }
                } else if (e.attributes) {
                    Object.keys(a.directives).forEach(function (i) {
                        if ((!t || t.indexOf(i) === -1) && e.getAttribute) {
                            var _n2 = a.config.attributePrefix + "-" + i;if (e.hasAttribute(_n2)) {
                                var _r4 = e.getAttribute(_n2);var _o2 = a.directives[i];_this10.$getContext(e);_this10.$setElementDirective(e, i, _r4);if (_o2.init) {
                                    _o2.init.call(_this10, e, _r4, _this10);
                                }
                            }
                        }
                    });Array.from(e.attributes).forEach(function (t) {
                        var i = t.name;var r = t.textContent;var o = r.match(n);if (o !== null) {
                            var _c2 = _this10.$directives[e.$directives && e.$directives.attr];var _s = _c2 && _c2.parameters || "";if (_s) {
                                _s = _s.substring(1, _s.length - 1) + ",";
                            }_s += "'" + i + "' : '" + r.replace(n, "' + $1 + '") + "'";_s = "{" + _s + "}";_this10.$setElementDirective(e, "attr", _s);
                        }
                    });
                }if (e.childNodes) {
                    Array.from(e.childNodes).forEach(function (e) {
                        _this10.$parse(e);
                    });
                }
            }
        }, {
            key: "$setElementDirective",
            value: function $setElementDirective(t, i, n) {
                if (!t.$directives) {
                    t.$directives = {};
                }if (!t.$uid) {
                    t.$uid = e();
                }var r = a.directives[i];var o = r.getUid(t);this.$directives[o] = { name: i, handler: r, parameters: n, model: this, element: t };t.$directives[i] = o;
            }
        }, {
            key: "$render",
            value: function $render(e, t) {
                var _this11 = this;

                e.$stopRenderingPropagation = false;if (e.$directives) {
                    Object.keys(e.$directives).forEach(function (i) {
                        if ((!t || t.indexOf(i) === -1) && !e.$stopRenderingPropagation) {
                            var _n3 = e.$directives[i];var _r5 = this.$directives[_n3];if (!_r5) {
                                return;
                            }var _o3 = _r5.handler;var _c3 = _r5.parameters;if (_o3.bind) {
                                _o3.bind.call(this, e, _c3, this);
                            }if (_o3.update) {
                                _o3.update.call(this, e, _c3, this);
                            }
                        }
                    }.bind(this));
                }if (!document.documentElement.contains(e)) {
                    return;
                }if (!e.$stopRenderingPropagation && e.childNodes) {
                    Array.from(e.childNodes).forEach(function (e) {
                        _this11.$render(e);
                    });
                }
            }
        }, {
            key: "$stopRenderingPropagation",
            value: function $stopRenderingPropagation(e) {
                e.$stopRenderingPropagation = true;
            }
        }, {
            key: "$createContext",
            value: function $createContext(e, t, i) {
                this.$creatingContext = true;var o = t;if (t instanceof r) {
                    o.$this = t;o.$parent = t.$parent;o.$root = this;
                } else {
                    o = { $this: t, $parent: t.$parent, $root: this, $additionalProperties: new Set([]) };
                }var c = this.$getAdditionalContextProperties(e);c.forEach(function (t) {
                    if (["$this", "$parent", "$root"].indexOf(t) !== -1) {
                        throw new n("You cannot apply the key '" + t + "' as additionnal context property");
                    }o.$additionalProperties.add(t);o[t] = (e.parentNode || e.$parent).$context[t];
                });e.$additionalContextProperties = new Set(c);if (i) {
                    Object.keys(i).forEach(function (t) {
                        o.$additionalProperties.add(t);o[t] = i[t];e.$additionalContextProperties.add(t);
                    });
                }e.$context = o;this.$creatingContext = false;
            }
        }, {
            key: "$removeContext",
            value: function $removeContext(e) {
                var _this12 = this;

                delete e.$context;if (e.children) {
                    Array.from(e.children).forEach(function (e) {
                        _this12.$removeContext(e);
                    });
                }
            }
        }, {
            key: "$getContext",
            value: function $getContext(e) {
                if (!e) {
                    return {};
                }if (e.$context) {
                    return e.$context;
                }var t = this.$getContext(e.parentNode);e.$context = t;return t;
            }
        }, {
            key: "$getAdditionalContextProperties",
            value: function $getAdditionalContextProperties(e) {
                if (e.$additionalContextProperties) {
                    return e.$additionalContextProperties;
                }if (e === this.$rootElement) {
                    return new Set([]);
                }var t = e.parentNode || e.$parent;if (t) {
                    var _i = this.$getAdditionalContextProperties(t);e.$additionalContextProperties = _i;return _i;
                }return new Set([]);
            }
        }, {
            key: "$parseDirectiveGetterParameters",
            value: function $parseDirectiveGetterParameters(e) {
                return new Function("$context", "var $$result;with($context) {$$result=(" + e + ");};return $$result;");
            }
        }, {
            key: "$getDirectiveValue",
            value: function $getDirectiveValue(e, t, i) {
                var n = e.replace(/\n\s*/g, "");var r = this.$parseDirectiveGetterParameters(n);var o = i || this.$getContext(t);try {
                    return r(o);
                } catch (c) {
                    return undefined;
                }
            }
        }, {
            key: "$parseDirectiveSetterParameters",
            value: function $parseDirectiveSetterParameters(e) {
                return new Function("$context", "$value", "\n                with($context) {\n                    " + e + " = $value;\n                }\n            ");
            }
        }, {
            key: "$setDirectiveValue",
            value: function $setDirectiveValue(e, t, i) {
                var n = this.$parseDirectiveSetterParameters(e);try {
                    n(this.$getContext(t), i);
                } catch (r) {
                    if (r.name === "ReferenceError") {
                        var _o4 = "$this." + e;n(_o4);
                    }
                }
            }
        }, {
            key: "$insertRemoveElement",
            value: function $insertRemoveElement(e, t, i, n) {
                var r = i || e;if (t) {
                    var _o5 = !r.$parent.contains(e) || n;if (_o5) {
                        var _c4 = null;if (e.$before) {
                            e.$before.every(function (e) {
                                if (r.$parent.contains(e)) {
                                    _c4 = e;return false;
                                }return true;
                            });
                        }if (_c4) {
                            if (_c4.nextElementSibling) {
                                r.$parent.insertBefore(e, _c4.nextElementSibling);
                            } else {
                                r.$parent.appendChild(e);
                            }
                        } else {
                            r.$parent.insertBefore(e, r.$parent.firstChild);
                        }
                    }
                } else {
                    this.$stopRenderingPropagation(e);if (r.$parent.contains(e)) {
                        r.$parent.removeChild(e);
                    }
                }
            }
        }], [{
            key: "directive",
            value: function directive(e, t) {
                this.directives[e] = new s(e, t);
            }
        }]);

        return a;
    }(r);

    a.directives = {}, a.directive("show", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n ? e.style.display = "" : e.style.display = "none";
        } }), a.directive("class", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);e.originalClassList || (e.originalClassList = [], Array.from(e.classList).forEach(function (t) {
                e.originalClassList.push(t);
            })), Array.from(e.classList).forEach(function (t) {
                -1 === e.originalClassList.indexOf(t) && e.classList.remove(t);
            }), n && ("string" == typeof n && (n = _defineProperty({}, n, !0)), "object" == (typeof n === "undefined" ? "undefined" : _typeof(n)) && Object.keys(n).forEach(function (t) {
                var i = t.split(" "),
                    r = e.classList;i.forEach(function (e) {
                    n[t] ? r.add(e) : r.remove(e);
                });
            }));
        } }), a.directive("style", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n && "object" == (typeof n === "undefined" ? "undefined" : _typeof(n)) && Object.keys(n).forEach(function (t) {
                var i = n[t];i ? e.style[t] = i : e.style[t] = "";
            });
        } }), a.directive("attr", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n && "object" == (typeof n === "undefined" ? "undefined" : _typeof(n)) && Object.keys(n).forEach(function (t) {
                var i = n[t];i ? e.setAttribute(t, i) : e.removeAttribute(t);
            });
        } }), a.directive("disabled", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n ? e.setAttribute("disabled", !0) : e.removeAttribute("disabled");
        } }), a.directive("value", { bind: function bind(e, t, i) {
            e["true" === e.contentEditable ? "onblur" : "onchange"] = function () {
                var n = void 0,
                    r = e.nodeName.toLowerCase(),
                    o = e.type;switch (r) {case "input":case "select":
                        switch (o) {case "checkbox":
                                n = Boolean(e.checked);break;case "radio":
                                n = document.querySelector("input[name=\"" + e.name + "\"]:checked").value;break;default:
                                n = e.value;}break;case "textarea":
                        n = e.value;break;default:
                        if (e.contentEditable) {
                            n = e.innerHTML;break;
                        }return;}i.$setDirectiveValue(t, e, n);
            };
        }, update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);void 0 === n && (n = "");var r = e.nodeName.toLowerCase(),
                o = e.type;switch (r) {case "input":case "select":
                    switch (o) {case "checkbox":
                            e.checked = Boolean(n);break;case "radio":
                            var _c5 = document.querySelector("input[name=\"" + e.name + "\"][value=\"" + n + "\"]");_c5 && (_c5.checked = !0);break;case "file":
                            return;default:
                            e.value = n;}break;case "textarea":
                    e.value = n;break;default:
                    e.contentEditable ? e.innerHTML = n : e.value = n;}
        } }), a.directive("input", { bind: function bind(e, t, i) {
            e.addEventListener("input", function () {
                i.$setDirectiveValue(t, e, e.value);
            });
        }, update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);e.value = n || "";
        } }), a.directive("focus", { bind: function bind(e, t, i) {
            e.addEventListener("focus", function () {
                i.$setDirectiveValue(t, e, !0);
            }), e.addEventListener("blur", function () {
                i.$setDirectiveValue(t, e, !1);
            });
        }, update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);n && e !== document.activeElement ? e.focus() : n || e !== document.activeElement || e.blur();
        } }), a.directive("options", { update: function update(e, t, i) {
            if ("select" !== e.nodeName.toLowerCase()) throw new n("options directive can be applied only on select tags");var r = i.$getDirectiveValue(t, e),
                o = r.valueOf();if (r && (!("$data" in r) || r.$data)) {
                (function () {
                    if (r.$data) {
                        o = {};var _c6 = r.$data.valueOf();Object.keys(_c6).forEach(function (e) {
                            var t = r.$data[e],
                                i = r.$value ? t[r.$value] : e,
                                n = r.$label ? t[r.$label] : t;o[i] = n;
                        });
                    }var s = e.value || r.$selected;e.innerHTML = "";var a = function a(t, i) {
                        var n = document.createElement("option");n.value = t, n.innerText = i, t.toString() === s && (n.selected = !0), e.appendChild(n);
                    };Object.keys(o).forEach(function (e) {
                        var t = o[e];a(e, t);
                    });
                })();
            }
        } }), a.directive("text", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);"#text" === e.nodeName ? e.nodeValue = n : e.innerText = n;
        } }), a.directive("html", { update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);e.innerHTML = n;var r = e.querySelectorAll("script");Array.from(r).forEach(function (e) {
                if (e.innerText) {
                    var _t = new Function(e.innerText);_t();
                } else {
                    var _i2 = document.createElement("script");_i2.src = e.src, e.parentNode.replaceChild(_i2, e);
                }
            });
        } }), a.directive("click", { bind: function bind(e, t, i) {
            var n = i.$parseDirectiveGetterParameters(t);e.onclick = function (t) {
                var r = i.$getContext(e),
                    o = n(r, t);"function" == typeof o && o.call(r.$this, r, t);
            };
        } }), a.directive("on", { bind: function bind(e, t, i) {
            var n = i.$parseDirectiveGetterParameters(t),
                r = n(i.$getContext(e));"object" == (typeof r === "undefined" ? "undefined" : _typeof(r)) && Object.keys(r).forEach(function (t) {
                var n = r[t],
                    o = "on" + t;e[o] = function (t) {
                    n(i.$getContext(e), t);
                };
            });
        } }), a.directive("submit", { bind: function bind(e, t, i) {
            if ("form" !== e.nodeName.toLowerCase()) throw new n("submit directive can be applied only on form tags");var r = i.$parseDirectiveGetterParameters(t);e.addEventListener("submit", function (t) {
                var n = r(i.$getContext(e));"function" == typeof n && n(i.$getContext(e), t);
            });
        } });var u = function u(t, i) {
        t.$before = [], t.previousElementSibling && (t.$before = [t.previousElementSibling], t.previousElementSibling.$before && (t.$before = t.$before.concat(t.previousElementSibling.$before))), t.$parent = t.parentNode;var n = t.innerHTML,
            r = e();t.$templateName = r, i.$registerTemplate(r, n);
    };a.directive("each", { init: function init(e, t, i) {
            u(e, i), e.$clones = [];var n = document.createElement("meta");n.$initialElement = e, n.$uid = e.$uid, n.$context = e.$context, n.setAttribute("name", "e-each-" + e.$uid), i.$setElementDirective(n, "each", t), e.parentNode.replaceChild(n, e);
        }, update: function update(e, t, i) {
            var n = e.$initialElement,
                r = i.$getDirectiveValue(t, n);if (r) {
                (function () {
                    var o = r && Array.from("$data" in r ? r.$data || [] : r) || [];o = o.filter(function (e) {
                        return void 0 !== e && null !== e;
                    }), r.$filter && (o = o.filter(r.$filter)), r.$sort && ("function" == typeof r.$sort ? o.sort(r.$sort) : o.sort(function (e, t) {
                        return e[r.$sort] < t[r.$sort] ? -1 : 1;
                    })), r.$order && r.$order < 0 && o.reverse();var c = r.$offset || 0,
                        s = c + (r.$limit || o.length);o = o.slice(c, s);var a = n.$clones.slice();a.forEach(function (e) {
                        -1 !== o.indexOf(e.$$item) && e.$context || (i.$clean(e), e.parentNode && e.parentNode.contains(e) && e.parentNode.removeChild(e));
                    }), n.$clones = [], o.forEach(function (t, o) {
                        var c = a.findIndex(function (e) {
                            return e.$$item === t;
                        }),
                            s = n.$clones.slice().reverse().concat(e).concat(n.$before);if (-1 !== c) {
                            var _u = a[c];if (n.$clones.push(_u), c === o) return;return _u.$before = s, _u.$context.$index = o, void i.$insertRemoveElement(_u, !0, n, !0);
                        }var f = { $index: o };r.$item && (f[r.$item] = t);var d = n.cloneNode(!0);d.$$item = t, d.$parent = n.$parent, i.$createContext(d, t, f), d.$before = s, Object.keys(n.$directives).forEach(function (e) {
                            if ("each" !== e) {
                                var _t2 = n.$directives[e];i.$setElementDirective(d, e, i.$directives[_t2].parameters);
                            }
                        }), i.$insertRemoveElement(d, !0, n), d.innerHTML = i.$templates[n.$templateName], d.childNodes && Array.from(d.childNodes).forEach(function (e) {
                            i.$parse(e);
                        }), i.$render(d, ["each"]), n.$clones.push(d);
                    });
                })();
            }
        } }), a.directive("if", { init: function init(e, t, i) {
            u(e, i);
        }, update: function update(e, t, i) {
            var n = Boolean(i.$getDirectiveValue(t, e));i.$insertRemoveElement(e, n), n && i.$render(e, ["if"]);
        } }), a.directive("unless", { init: function init(e, t, i) {
            u(e, i);
        }, update: function update(e, t, i) {
            var n = i.$getDirectiveValue(t, e);i.$insertRemoveElement(e, !n), n || i.$render(e, ["unless"]);
        } }), a.directive("with", { init: function init(e, t, i) {
            u(e, i);
        }, update: function update(e, t, i) {
            var n = void 0,
                r = {};if (e === i.$rootElement) n = i.$getDirectiveValue(t, e, i);else {
                if (!e.$parent) return void i.$stopRenderingPropagation(e);i.$removeContext(e), n = i.$getDirectiveValue(t, e.$parent);
            }n && "$data" in n && ("$as" in n && (r[n.$as] = n.$data), n = n.$data), n ? (i.$removeContext(e), i.$createContext(e, n, r), i.$insertRemoveElement(e, !0), e.childNodes && Array.from(e.childNodes).forEach(function (e) {
                i.$clean(e);
            }), e.innerHTML = i.$templates[e.$templateName], e.childNodes && Array.from(e.childNodes).forEach(function (e) {
                i.$parse(e);
            }), i.$render(e, ["with"])) : i.$insertRemoveElement(e, !1);
        } }), a.directive("template", { update: function update(e, t, i) {
            if (document.documentElement.contains(e)) {
                var _n5 = i.$getDirectiveValue(t, e),
                    _r6 = i.$templates[_n5] || "";e.innerHTML = _r6;var _o6 = e.querySelectorAll("script");Array.from(_o6).forEach(function (e) {
                    if (e.innerText) {
                        var _t3 = new Function(e.innerText);_t3();
                    } else {
                        var _i3 = document.createElement("script");_i3.src = e.src, e.parentNode.replaceChild(_i3, e);
                    }
                }), e.childNodes && (Array.from(e.childNodes).forEach(function (e) {
                    i.$parse(e);
                }), Array.from(e.childNodes).forEach(function (e) {
                    i.$render(e);
                }));
            }
        } }), a.config = { attributePrefix: "e", delimiters: ["${", "}"] }, Object.defineProperty(a, "version", { value: "2.0.0-2", writable: !1 }), a.utils = { uid: function uid() {
            return e();
        } };var f = Array.isArray;Array.isArray = function (e) {
        return e instanceof o ? !0 : f(e);
    };var d = Object.keys;return Object.keys = function (e) {
        if (e instanceof o) {
            var _ret4 = function () {
                var t = [];return {
                    v: (e.forEach(function (e, i) {
                        t.push(i.toString());
                    }), t)
                };
            }();

            if ((typeof _ret4 === "undefined" ? "undefined" : _typeof(_ret4)) === "object") return _ret4.v;
        }if (e instanceof r) {
            var _t4 = d(e);return _t4.filter(function (t) {
                return "$" !== t.substr(0, 1) && !(e.$additionalProperties && e.$additionalProperties.has(t));
            });
        }return d(e);
    }, a;
});